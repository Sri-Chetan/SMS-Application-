AndroidManifests.xml:
<?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout 
xmlns:android="http://schemas.android.com/apk/res/android" 
xmlns:app="http://schemas.android.com/apk/res-auto" 
xmlns:tools="http://schemas.android.com/tools" 
android:layout_width="match_parent" 
android:layout_height="match_parent" 
tools:context=".MainActivity">

<EditText 
android:id="@+id/phno" 
android:layout_width="297dp" 
android:layout_height="70dp"
android:layout_marginStart="100dp" 
android:layout_marginTop="148dp" 
android:ems="10" 
android:inputType="phone" 
android:minHeight="48dp" 
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent" 
tools:ignore="SpeakableTextPresentCheck" />


<EditText 
android:id="@+id/textmssg" 
android:layout_width="296dp" 
android:layout_height="227dp" 
android:layout_marginStart="100dp" 
android:layout_marginTop="140dp" 
android:ems="10" 
android:gravity="start|top" 
android:inputType="textMultiLine"
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toBottomOf="@+id/phno" 
tools:ignore="SpeakableTextPresentCheck" />

<TextView 
android:id="@+id/textView2" 
android:layout_width="109dp" 
android:layout_height="36dp" 
android:layout_marginStart="44dp" 
android:layout_marginTop="84dp" 
android:text="Phone Number" 
android:textSize="16sp" 
android:textStyle="bold|italic"
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent" />

<TextView 
android:id="@+id/textView3" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginStart="44dp" 
android:layout_marginTop="184dp" 
android:text="Text" 
android:textSize="16sp" 
android:textStyle="bold|italic"


app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toBottomOf="@+id/textView2" />

<Button
android:id="@+id/button" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginStart="300dp" 
android:layout_marginTop="44dp" 
android:text="SEND" 
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/textmssg" />
</androidx.constraintlayout.widget.ConstraintLayout>


AndroidManifests.xml:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android" 
xmlns:tools="http://schemas.android.com/tools" 
package="com.example.sms_application">
<!--	the added command line for sms permissions-->
<uses-permission android:name="android.permission.SEND_SMS" />
<application 
android:allowBackup="true"
android:dataExtractionRules="@xml/data_extraction_rules" 
android:fullBackupContent="@xml/backup_rules" 
android:icon="@mipmap/ic_launcher" 
android:label="@string/app_name" 
android:roundIcon="@mipmap/ic_launcher_round" 
android:supportsRtl="true" 
android:theme="@style/Theme.Sms_application" 
tools:targetApi="31">
<activity 
android:name=".MainActivity"


android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER" />
</intent-filter>
</activity>
</application>
</manifest>

MainActivity.kt
package com.example.sms_application 
import android.Manifest
import android.content.pm.PackageManager
import androidx.appcompat.app.AppCompatActivity 
import android.os.Bundle
import android.telephony.SmsManager 
import android.text.TextUtils
import android.widget.Button 
import android.widget.EditText 
import android.widget.Toast
import androidx.core.app.ActivityCompat 
import androidx.core.content.ContextCompat


class MainActivity : AppCompatActivity()

{private lateinit var phno : EditText 
private lateinit var txtmssg : EditText 
private lateinit var sendbtn : Button 
private val permissionRequest = 101
override fun onCreate(savedInstanceState: Bundle?)
{super.onCreate(savedInstanceState) 
setContentView(R.layout.activity_main)



phno = findViewById(R.id.phno) 
txtmssg = findViewById(R.id.textmssg) 
sendbtn = findViewById(R.id.button)

sendbtn.setOnClickListener{sendMessa 
ge()
}
}


private fun sendMessage() {
    val	permissionCheck	=	ContextCompat.checkSelfPermission(this, 
Manifest.permission.SEND_SMS)
if (permissionCheck == PackageManager.PERMISSION_GRANTED)
{myMessage()
} else {
ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.SEND_SMS), 
permissionRequest)
}
}


private fun myMessage() {
val myNumber: String =phno.text.toString().trim() 
val myMsg: String = txtmssg.text.toString().trim() 
if (myNumber == "" || myMsg == "") {
Toast.makeText(this, "Field cannot be empty", Toast.LENGTH_SHORT).show()
} else {
if (TextUtils.isDigitsOnly(myNumber)) {
val smsManager: SmsManager = SmsManager.getDefault() 
smsManager.sendTextMessage(myNumber, null, myMsg, null, null) 
Toast.makeText(this, "Message Sent", Toast.LENGTH_SHORT).show()
} else {
        Toast.makeText(this,	"Please	enter	the	correct	number", 
Toast.LENGTH_SHORT).show()}}}}



